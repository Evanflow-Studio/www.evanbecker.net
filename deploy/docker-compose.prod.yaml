services:
  proxy:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.postgres.address=:5432"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
    ports:
      - 6969:8080
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /certs/:/certs/
      - /etc/traefik/dynamic/:/etc/traefik/dynamic/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`traefik.evanbecker.net`)"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.api.service=api@internal"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - evanbecker-db-prod
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${Prod_DB_PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${Prod_DB_PGADMIN_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.service=pgadmin"
      - "traefik.http.routers.pgadmin.rule=Host(`db.evanbecker.net`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  evanbecker-db-prod:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${Prod_DB_DATABASE}
      - POSTGRES_USER=${Prod_DB_USER}
      - POSTGRES_PASSWORD=${Prod_DB_PASSWORD}
    volumes:
      - ./appdata/postgres:/var/lib/postgresql/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.entryPoints=postgres"
      - "traefik.tcp.routers.postgres.service=postgres"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"

  evanbecker:
    container_name: evanbecker-server-prod
    pull_policy: always
    image: registry.digitalocean.com/evanbecker/evanbecker-server-prod
    environment:
      - Auth0__Domain=${Prod_API_Auth0_Domain}
      - GitHub__PAT=${Prod_API_GitHub_PAT}
      - Auth0__Audience=${Prod_API_Auth0_Audience}
      - Auth0__ClientId=${Prod_API_Auth0_ClientId}
      - Auth0__ClientSecret=${Prod_API_Auth0_ClientSecret}
      - Auth0__Url=${Prod_API_Auth0_Url}
      - ConnectionStrings__Database=${CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:5000
    ports:
      - 5000:5000
    depends_on:
      - evanbecker-db-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aspnetapp.entrypoints=websecure"
      - "traefik.http.routers.aspnetapp.rule=Host(`api.evanbecker.net`)"      
      - "traefik.http.routers.aspnetapp.tls=true"
      - "traefik.http.services.aspnetapp.loadbalancer.server.port=5000"
      - "traefik.port=443"
      
  evanbecker-client:
    container_name: evanbecker-client-prod
    pull_policy: always
    image: registry.digitalocean.com/evanbecker/evanbecker-client-prod
    depends_on:
      - evanbecker-db-prod
      - evanbecker
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.rule=Host(`www.evanbecker.net`)"
      - "traefik.http.middlewares.client-web-secure.redirectscheme.scheme=https"
      - "traefik.http.routers.client.middlewares=client-web-secure"
      - "traefik.http.routers.client.tls=true"
      - "traefik.http.services.client.loadbalancer.server.port=3000" # I'm setting up the reverse proxy to target 3000 as we defined in the Dockerfile.
      - "traefik.port=443"