services:
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - evanbecker-db
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    ports:
      - 5051:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com #TODO: Add to secrets
      PGADMIN_DEFAULT_PASSWORD: 123456 #TODO: Add to secrets
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin-test.entrypoints=websecure"
      - "traefik.http.routers.pgadmin-test.tls=true"
      - "traefik.http.routers.pgadmin-test.service=pgadmin-test"
      - "traefik.http.routers.pgadmin-test.rule=Host(`db-test.evanbecker.net`)"
      - "traefik.http.services.pgadmin-test.loadbalancer.server.port=80"

  evanbecker-db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - ./appdata/postgres:/var/lib/postgresql/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres-test.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres-test.entryPoints=postgres"
      - "traefik.tcp.routers.postgres-test.service=postgres-test"
      - "traefik.tcp.services.postgres-test.loadbalancer.server.port=5432"

  evanbecker:
    container_name: evanbecker-server
    pull_policy: always
    image: registry.digitalocean.com/evanbecker/evanbecker-server
    environment:
      - Auth0__Domain=${Auth0_Domain}
      - GitHub__PAT=${GitHubConfiguration_Pat}
      - Auth0__Audience=${Auth0_Audience}
      - Auth0__ClientId=${Auth0_ClientId}
      - Auth0__ClientSecret=${Auth0_ClientSecret}
      - Auth0__Url=${Auth0_Url}
      - ConnectionStrings__Database=${CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:5000
    ports:
      - 5001:5000
    depends_on:
      - evanbecker-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aspnetapp-test.entrypoints=websecure"
      - "traefik.http.routers.aspnetapp-test.rule=Host(`api-test.evanbecker.net`)"      
      - "traefik.http.routers.aspnetapp-test.tls=true"
      - "traefik.http.services.aspnetapp-test.loadbalancer.server.port=5001"
      - "traefik.port=443"
      
  evanbecker-client:
    container_name: evanbecker-client
    pull_policy: always
    image: registry.digitalocean.com/evanbecker/evanbecker-client
    depends_on:
      - evanbecker-db
      - evanbecker
    ports:
      - 3001:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client-test.entrypoints=websecure"
      - "traefik.http.routers.client-test.rule=Host(`test.evanbecker.net`)"
      - "traefik.http.middlewares.client-web-secure-test.redirectscheme.scheme=https"
      - "traefik.http.routers.client-test.middlewares=client-web-secure-test"
      - "traefik.http.routers.client-test.tls=true"
      - "traefik.http.services.client-test.loadbalancer.server.port=3001" # I'm setting up the reverse proxy to target 3000 as we defined in the Dockerfile.
      - "traefik.port=443"

networks:
  default:
    name: traefik_proxy
    external: true