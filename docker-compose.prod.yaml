services:
  proxy:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # TODO: Test if 5430 is valid for postgresql
      - "--entrypoints.postgres.address=:5431"
      - "--entrypoints.web.address=:3000"
      - "--entrypoints.websecure.address=:3001"
      - "--entrypoints.api.address=:5002"
      - "--entrypoints.apisecure.address=:5003"
    ports:
      - "6969:8080" # Traefik dashboard
      - "5431:5432" # PostgreSQL port
      - "5002"
      - "5003"
      - "3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/traefik/:/etc/traefik/

  evanbecker-db-prod:
    image: postgres
    restart: always
    ports:
      - 5431:5431
    expose:
      - 5431
    environment:
      - POSTGRES_DB=${Prod_DB_DATABASE}
      - POSTGRES_USER=${Prod_DB_USER}
      - POSTGRES_PASSWORD=${Prod_DB_PASSWORD}
    volumes:
      - ./appdata/postgres:/var/lib/postgresql/data
    command: -p 5431
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`db.evanbecker.net`)"
      - "traefik.tcp.routers.postgres.entryPoints=postgres"
      - "traefik.tcp.routers.postgres.service=postgres"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5431"

  evanbecker:
    container_name: evanbecker-server-prod
    build:
      context: .
      dockerfile: evanbecker-api/Dockerfile
    image: registry.digitalocean.com/evanbecker/evanbecker-server-prod
    environment:
      - Auth0__Domain=${Prod_API_Auth0_Domain}
      - GitHub__PAT=${Prod_API_GitHub_PAT}
      - Auth0__Audience=${Prod_API_Auth0_Audience}
      - Auth0__ClientId=${Prod_API_Auth0_ClientId}
      - Auth0__ClientSecret=${Prod_API_Auth0_ClientSecret}
      - Auth0__Url=${Prod_API_Auth0_Url}
      - ConnectionStrings__Database=${CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    ports:
      - "5002:80"
      - "5003:443"
    depends_on:
      - evanbecker-db-prod
    volumes:
      - ~/.aspnet/https:/https:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aspnetapp.rule=Host(`api.evanbecker.net`)"
      - "traefik.http.routers.aspnetapp.entrypoints=api"    
      - "traefik.http.routers.aspnetapp.entrypoints=apisecure"   
      
  evanbecker-client:
    container_name: evanbecker-client-prod
    build:
      context: .
      dockerfile: evanbecker-client/Dockerfile
    image: registry.digitalocean.com/evanbecker/evanbecker-client-prod
    depends_on:
      - evanbecker-db-prod
      - evanbecker
    ports:
      - "3000:3000"
      - "3001:3001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.entrypoints=web,websecure"
      - "traefik.http.routers.client.rule=Host(`www.evanbecker.net`)"
      - "traefik.http.services.client.loadbalancer.server.port=3000" # I'm setting up the reverse proxy to target 3000 as we defined in the Dockerfile.
      - "traefik.port=80"